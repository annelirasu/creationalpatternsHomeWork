Adapter belongs to structural design patterns

Adapter is a special object that converts the interface of one object so that another object can understand it.
It is used for input coming outside of the current system. An adapter wraps one of the objects to hide the
 complexity of conversion happening behind the scenes.

Adapters can not only convert data into various formats but can also help objects with different interfaces collaborate.
Here’s how it works:
1.The adapter gets an interface, compatible with one of the existing objects.
2. Using this interface, the existing object can safely call the adapter’s methods.
3. Upon receiving a call, the adapter passes the request to the second object, but in a format and order that the second object expects.
Sometimes it’s even possible to create a two-way adapter that can convert the calls in both directions.

When to use?
 Use the Adapter class when you want to use some existing class, but its interface isn’t compatible with the rest of your code.
 Use the pattern when you want to reuse several existing subclasses that lack some common functionality that can’t be added to the superclass.